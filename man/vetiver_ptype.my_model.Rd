% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vetiver_methods.R
\name{vetiver_ptype.my_model}
\alias{vetiver_ptype.my_model}
\title{Create a vetiver input data prototype}
\usage{
\method{vetiver_ptype}{my_model}(model, ...)
}
\arguments{
\item{model}{A trained model, such as an \code{lm()} model or a tidymodels
\code{\link[workflows:workflow]{workflows::workflow()}}.}

\item{...}{Other method-specific arguments passed to \code{\link[vetiver:vetiver_ptype]{vetiver_ptype()}}
to compute an input data prototype, such as \code{prototype_data} (a sample of
training features).}
}
\value{
A \code{vetiver_ptype} method returns a zero-row dataframe, and
\code{vetiver_create_ptype()} returns either such a zero-row dataframe, \code{NULL},
or the dataframe passed to \code{save_prototype}.
}
\description{
Optionally find and return an input data prototype for a model.
}
\details{
These are developer-facing functions, useful for supporting new model types.
A \code{\link[vetiver:vetiver_model]{vetiver_model()}} object optionally stores an input data prototype for
checking at prediction time.
\itemize{
\item The default for \code{save_prototype}, \code{TRUE}, finds an input data prototype (a
zero-row slice of the training data) via \code{\link[vetiver:vetiver_ptype]{vetiver_ptype()}}.
\item \code{save_prototype = FALSE} opts out of storing any input data prototype.
\item You may pass your own data to \code{save_prototype}, but be sure to check that it
has the same structure as your training data, perhaps with
\code{\link[hardhat:scream]{hardhat::scream()}}.
}
}
\examples{
cars_lm <- lm(mpg ~ cyl + disp, data = mtcars)

vetiver_create_ptype(cars_lm, TRUE)

## calls the right method for `model` via:
vetiver_ptype(cars_lm)

## can also turn off prototype
vetiver_create_ptype(cars_lm, FALSE)
\dontshow{if (rlang::is_installed("ranger")) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}
## some models require that you pass in training features
cars_rf <- ranger::ranger(mpg ~ ., data = mtcars)
vetiver_ptype(cars_rf, prototype_data = mtcars[,-1])
\dontshow{\}) # examplesIf}
}
